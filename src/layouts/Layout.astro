---
interface Props {
  title: string;
}
import './globals.css'
const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Latest Crypto Airdrops and Opportunities" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body class="bg-gray-50 dark:bg-gray-900 overflow-x-hidden">
    <header class="fixed w-full bg-clip-padding backdrop-filter backdrop-blur-md bg-opacity-15 shadow-sm z-50">
      <nav class="container mx-auto px-4 py-4">
        <div class="flex justify-between items-center">
          <a href="/" class="text-2xl font-bold text-primary">AirdropWatch</a>
          
          <!-- Desktop Navigation -->
          <div class="hidden md:flex items-center space-x-6">
            <a href="/" class="dark:text-neutral-100 hover:text-primary ">Home</a>
            <a href="/airdrops" class="dark:text-neutral-100 hover:text-primary">Airdrops</a>
            <a href="/guide" class="dark:text-neutral-100 hover:text-primary">Guide</a>
            
            <!-- Dark Mode Toggle -->
            <button
              id="theme-toggle"
              class="p-2 dark:text-neutral-100 hover:bg-gray-100/20 dark:hover:bg-gray-700/20 rounded-lg"
              aria-label="Toggle dark mode"
            >
              <!-- Sun icon -->
              <svg
                id="theme-toggle-light-icon"
                class="hidden w-5 h-5"
                fill="currentColor"
                viewBox="0 0 20 20"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z"
                ></path>
              </svg>
              <!-- Moon icon -->
              <svg
                id="theme-toggle-dark-icon"
                class="hidden w-5 h-5"
                fill="currentColor"
                viewBox="0 0 20 20"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"
                ></path>
              </svg>
            </button>
          </div>

          <!-- Mobile Navigation Button -->
          <div class="md:hidden flex items-center space-x-2">
            <!-- Dark Mode Toggle for Mobile -->
            <button
              id="theme-toggle-mobile"
              class="p-2 dark:text-neutral-100 hover:bg-gray-100/20 dark:hover:bg-gray-700/20 rounded-lg"
              aria-label="Toggle dark mode"
            >
              <!-- Sun icon -->
              <svg
                id="theme-toggle-light-icon-mobile"
                class="hidden w-5 h-5"
                fill="currentColor"
                viewBox="0 0 20 20"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z"
                ></path>
              </svg>
              <!-- Moon icon -->
              <svg
                id="theme-toggle-dark-icon-mobile"
                class="hidden w-5 h-5"
                fill="currentColor"
                viewBox="0 0 20 20"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"
                ></path>
              </svg>
            </button>
            
            <button 
              id="mobile-menu-button" 
              class="dark:text-neutral-100 focus:outline-none"
              aria-label="Toggle menu"
            >
              <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
              </svg>
            </button>
          </div>
        </div>

        <!-- Mobile Navigation Menu -->
        <div 
          id="mobile-menu" 
          class="hidden md:hidden mt-4 pb-4"
        >
          <a href="/" class="block py-2 dark:text-neutral-100 hover:text-primary ">Home</a>
          <a href="/airdrops" class="block py-2 dark:text-neutral-100 hover:text-primary ">Airdrops</a>
          <a href="/guide" class="block py-2 dark:text-neutral-100 hover:text-primary ">Guide</a>
        </div>
      </nav>
    </header>

    <main class="pt-[4.5rem] pb-8">
      <slot />
    </main>

    <footer class="bg-white dark:bg-gray-800 shadow-inner">
      <div class="container mx-auto px-4 py-8">
        <div class="text-center text-gray-600 dark:text-gray-300">
          <p>&copy; {new Date().getFullYear()} AirdropWatch. All rights reserved.</p>
        </div>
      </div>
    </footer>

    <script>
      // Theme toggle functionality
      function updateTheme() {
        if (localStorage.theme === 'dark' || (!('theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
          document.documentElement.classList.add('dark');
          document.querySelectorAll('#theme-toggle-dark-icon, #theme-toggle-dark-icon-mobile').forEach(el => el.classList.remove('hidden'));
          document.querySelectorAll('#theme-toggle-light-icon, #theme-toggle-light-icon-mobile').forEach(el => el.classList.add('hidden'));
        } else {
          document.documentElement.classList.remove('dark');
          document.querySelectorAll('#theme-toggle-dark-icon, #theme-toggle-dark-icon-mobile').forEach(el => el.classList.add('hidden'));
          document.querySelectorAll('#theme-toggle-light-icon, #theme-toggle-light-icon-mobile').forEach(el => el.classList.remove('hidden'));
        }
      }

      // Initial theme setup
      updateTheme();

      // Theme toggle event listeners
      ['theme-toggle', 'theme-toggle-mobile'].forEach(id => {
        const button = document.getElementById(id);
        if (button) {
          button.addEventListener('click', () => {
            if (document.documentElement.classList.contains('dark')) {
              localStorage.theme = 'light';
            } else {
              localStorage.theme = 'dark';
            }
            updateTheme();
          });
        }
      });

      // Mobile menu toggle
      const mobileMenuButton = document.getElementById('mobile-menu-button');
      const mobileMenu = document.getElementById('mobile-menu');

      if (mobileMenuButton && mobileMenu) {
        mobileMenuButton.addEventListener('click', () => {
          mobileMenu.classList.toggle('hidden');
        });

        // Close menu when clicking outside
        document.addEventListener('click', (event) => {
          if (!mobileMenuButton.contains(event.target as Node) && 
              !mobileMenu.contains(event.target as Node)) {
            mobileMenu.classList.add('hidden');
          }
        });
      }
    </script>
  </body>
</html>